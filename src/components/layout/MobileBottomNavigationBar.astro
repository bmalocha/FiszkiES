---
import { Home, BookOpen, Repeat } from "lucide-astro"; // Assuming lucide-astro is installed

// Get user from Astro context
const user = Astro.locals.user;
const isAuthenticated = user !== null;
const currentPath = Astro.url.pathname;

const navItems = [
  { href: "/generate", label: "Generuj", Icon: Home, testId: "bottom-nav-generate" },
  { href: "/my-flashcards", label: "Moje Fiszki", Icon: BookOpen, testId: "bottom-nav-my-flashcards" },
  { href: "/repeat", label: "Powt√≥rz", Icon: Repeat, testId: "bottom-nav-repeat" },
];
---

{
  isAuthenticated && (
    <nav
      aria-label="Nawigacja mobilna"
      class="fixed bottom-0 left-0 right-0 z-40 border-t border-border bg-card md:hidden"
    >
      <div class="container mx-auto flex h-16 max-w-md items-center justify-around px-4">
        {navItems.map(({ href, label, Icon, testId }) => {
          const isActive = currentPath === href || (href !== "/" && currentPath.startsWith(href));
          return (
            <a
              href={href}
              class:list={[
                "flex flex-col items-center justify-center gap-1 p-2 text-xs font-medium transition-colors",
                isActive ? "text-primary" : "text-muted-foreground hover:text-primary",
              ]}
              aria-current={isActive ? "page" : undefined}
              data-testid={testId}
            >
              <Icon class:list={["h-5 w-5", isActive ? "text-primary" : "text-muted-foreground"]} />
              <span>{label}</span>
            </a>
          );
        })}
      </div>
      {/* Add padding-bottom to account for safe area if needed */}
      {/* <div class="pb-safe"></div> */}
    </nav>
  )
}
