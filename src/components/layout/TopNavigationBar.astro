---
import { Button } from "@/components/ui/button"; // Import Button if needed

// Get user from Astro context (populated by middleware)
const user = Astro.locals.user;
const isAuthenticated = user !== null;
const userEmail = user?.email; // Get email if user exists
---

<nav class="bg-card border-b border-border sticky top-0 z-50 shadow-sm">
  <div class="container mx-auto px-4 h-16 flex items-center justify-between">
    <div class="flex items-center space-x-8">
      <a href="/" class="text-lg font-semibold text-primary">
        Fiszki<span class="text-destructive">ES</span>
      </a>
      {
        isAuthenticated && (
          <div class="hidden md:flex items-center space-x-4">
            <a
              href="/generate"
              class="text-sm font-medium text-muted-foreground transition-colors hover:text-primary"
              set:html={"Generowanie"}
            />
            <a
              href="/my-flashcards"
              class="text-sm font-medium text-muted-foreground transition-colors hover:text-primary"
              set:html={"Moje Fiszki"}
            />
            <a
              href="/repeat"
              class="text-sm font-medium text-muted-foreground transition-colors hover:text-primary"
              set:html={"Powtarzanie"}
            />
          </div>
        )
      }
    </div>

    <div class="flex items-center space-x-4">
      {
        isAuthenticated && userEmail ? (
          <div class="flex items-center space-x-4">
            <span class="text-sm text-muted-foreground hidden sm:inline" title={userEmail}>
              {userEmail}
            </span>
            {/* Basic Logout Button - Replace/integrate with dropdown later */}
            <Button variant="outline" size="sm" id="logout-button" aria-label="Wyloguj się">
              Wyloguj
            </Button>
            {/* <button class="..." aria-label="User menu"> ... User Icon ... </button> */}
          </div>
        ) : (
          <a
            href="/login"
            class="inline-flex items-center justify-center whitespace-nowrap rounded-md text-sm font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 bg-primary text-primary-foreground hover:bg-primary/90 h-9 px-3"
          >
            Zaloguj się
          </a>
        )
      }
    </div>
  </div>
</nav>

<script>
  // Ensure this script runs after the DOM is ready
  document.addEventListener("DOMContentLoaded", () => {
    const isAuthenticated = document.body.getAttribute("data-is-authenticated") === "true";

    if (isAuthenticated) {
      const logoutButton = document.getElementById("logout-button");
      if (logoutButton) {
        logoutButton.addEventListener("click", async () => {
          try {
            const response = await fetch("/api/auth/logout", {
              method: "POST",
            });
            if (response.ok) {
              window.location.href = "/"; // Redirect on success
            } else {
              console.error("Logout failed:", await response.text());
              alert("Wystąpił błąd podczas wylogowywania.");
            }
          } catch (error) {
            console.error("Logout request failed:", error);
            alert("Nie udało się wysłać żądania wylogowania.");
          }
        });
      }
    }
  });
</script>
